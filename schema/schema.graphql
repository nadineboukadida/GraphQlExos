type Infos {
    name: String!
    firstname: String!
}
enum Gender {
    MALE
    FEMALE
}
type Student {
    id: ID!
    name: String!
    age: Int!
    gender: Gender!
    classroom: Classroom
}
type Classroom {
    id: ID!
    designation: String!
    students: [Student!]
}
enum TodoStatus {
    WAITING
    IN_PROGRESS
    CANCELED
    DONE
} 

type Todo {
    id: String!
    name: String!
    content: String!
    status: TodoStatus!
    user: User
}
type User {
    id: ID!
    name: String
    email: String
    todos: [Todo]
}
input AddTodoInput {
    name: String!
    content: String!
    user: String!

}
input UpdateTodoInput {
    name: String
    content: String
    user: String
    status:TodoStatus
}
type Mutation  {
    addTodo(addTodoInput: AddTodoInput): Todo
    updateTodo(id:String ,UpdateTodoInput:UpdateTodoInput):Todo
    deleteTodo(id:String): [Todo]
}


type Query {
    hello(name: String): String!
    infos: Infos!
    getAllStudents: [Student]
    getStudent(id:ID!): Student
    getTodo(id:String!):Todo
    getUser(id:ID!):User
    getTodos:[Todo]
}

